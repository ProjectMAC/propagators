Vision: Expressiveness!

Programming language captures all possible
regularity and structure

Probability is easy, programming is hard.
- probability should be subservient
- inference in my toolkit, with everything else

Scheme scheme.scm

Parens matter!
- but don't count close parens
prefix notation
- precedence is a consequence
define
- lexical scope
let
return last form; tail recursion

procedures are values too
+ is just a procedure
lambda
closures
hyphens and other punctuation are ok in symbols
(?, ! convention)

cons, car, cdr
quote, for-each

Rollin' some dice: rolling-dice.scm
- discrete-select is part of Probabilistic Scheme
  - (actually a macro, to not over-evaluate)
- roll-two-dice is a procedure
- we can make a distribution out of it
  - and operate on that distribution
  - sample; convert to association list
- pp is a Scheme procedure that pretty-prints

Note the aliasing effect!

Bayes on coin fairness: one-coin.scm
- draw the graphical model
- case is part of Scheme
- the coin procedure returns a procedure
- the data is a list of observed coin flips
- observe! introduces evidence in Prob Scheme
- for-each runs the given procedure on every
  item in the given list

hierarchical-bayes.scm for contents of bags
- draw the graphical model
- Note reuse of previous coin model
- The data are a list of lists of coin-flips
  - so we know how many coins we drew, and which
    flips were which coins
- And redefining the experiment changes the
  experiment-result function
- Note the difference between flipping one coin
  many times and flipping many coins once
- Note everything is discrete

Evaluating up to 24: twenty-four.scm
- Easy to write the generative grammar
- Need breadth-first search for this one!

These are the efforts I am most familiar with

Ken Shan at Rutgers and Oleg Kiselyov at Fleet
Numerical Meteorology and Oceanography Center in
Monterey, CA

Noah Goodman and company at Brain and Cognitive
Sciences at MIT

Avi Pfeffer at Harvard

What else to say about "who is doing it"?

What to say about the individual systems?

Dilemma

Propagators!

Contributions
