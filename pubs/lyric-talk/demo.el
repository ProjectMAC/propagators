(defun grab-next-sexp-other-buffer ()
  (interactive)
  (switch-to-buffer "*scheme*")
  (end-of-buffer)
  (set-buffer (other-buffer (current-buffer)))
  (let ((beginning (point)))
    (forward-sexp)
    (copy-region-as-kill beginning (point))
    (forward-char))
  (switch-to-buffer "*scheme*")
  (yank))

(define-key global-map [f1] 'grab-next-sexp-other-buffer)
