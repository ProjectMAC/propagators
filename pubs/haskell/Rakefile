def last_compilation_type
  if File.exist?(".last_compilation_type")
    (IO.read ".last_compilation_type").strip
  else
    "none"
  end
end

def force_recompile? type
  if type != last_compilation_type
    "-fforce-recomp"
  else
    ""
  end
end

def printout filename
  printname = File.basename(filename) + ".ps"
  file printname => filename do
    sh "enscript --color -E -o #{printname} -fCourier-Bold12 #{filename}"
  end
  task :printout => printname
end

printout "Merging.hs"
printout "MergingTest.hs"

task :test do
  sh "ghc #{force_recompile? "test"} -fno-cse --make Run.hs"
  sh "echo test > .last_compilation_type"
  sh "./Run"
end

task :coverage do
  sh "rm -f *.tix"
  sh "ghc -fhpc #{force_recompile? "coverage"} -fno-cse --make Run.hs"
  sh "echo coverage > .last_compilation_type"
  sh "./Run"
  sh "hpc report Run"
  sh "hpc markup Run"
end

task :main do
  sh "ghc #{force_recompile? "test"} -fno-cse --make Main.hs" # For unsafePerformIO
  sh "echo test > .last_compilation_type"
  sh "./Main"
end
