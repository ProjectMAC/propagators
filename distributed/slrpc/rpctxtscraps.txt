

               End-to-end vs. composable error handling

One might ask, why not just implement end-to-end error handling?  Why
not rely on garbage collection to eventually clean up old, abandoned
continuations, and rather than worrying about which continuations
should report network errors when, just have the initiator of a
complex call wait for a timeout?  This can be made to work, in
scenarios similar to where turnstiles can be used, but it comes with
truly horrible composability properties.  There is no guarantee that
dynamic-wind actions will ever be run -- it depends on the lifetimes
of continuations.  There is no way to tell where a network error
occured -- a call simply fails after timing out.  Finding the problem
will require bolting on an entirely separate traceback mechanism,
which may or may not give fresh and accurate results.  Most
importantly, the choices of timeout values are quite arbitrary,
difficult to pick and failing to compose in any sensible fashion.  A
parameterized call must have either a carefully tuned, parameterized
timeout or a worst-case timeout.  A call that combines multiple calls
with built-in timeouts must still include its own higher-level
timeouts, and it cannot predict without actually going through the
call what the sum of all lower-level timeouts will be.  Typically, the
most practical solution is to set extremely generous timeouts on
everything and to outlaw long-running calls by fiat.  This works fine
in the absence of network errors, but when errors do occur, otherwise
short-running calls suffer excruciating delays.  Regardless of
strategy, the result is clumsy and brittle, requiring constant
supervision.

# ..too much bull-loni. aliveness heartbeats/timeouts?


There are, of course, better-refined end-to-end strategies that are
not quite so ridiculous.  For example, one might allow only the
end-consumer of a service to set timeouts and do so based on the
responsiveness needs of the user interface rather than on the speed of
the implementation.  Again, however, there is a serious breakdown in
composability.

A hybrid approach can provide somewhat better results. For example, foo-bar-baz et all
Or, one could track the chain of machines
traversed during a demarcated call and propagate periodic heartbeats 





# ...



